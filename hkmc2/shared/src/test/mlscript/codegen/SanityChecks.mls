:js



:ssjs
fun f(x, y) = x + y
f(2, 3)
//│ JS:
//│ f1 = function f(...args) {
//│   globalThis.Predef.checkArgs("f", 2, true, args.length);
//│   let x = args[0];
//│   let y = args[1];
//│   return x + y;
//│ };
//│ f1(2, 3)
//│ = 5


:expect NaN
:ssjs
:noSanityCheck
fun f2(x, y) = x + y
f2(2)
//│ JS:
//│ f21 = function f2(x, y) { return x + y; }; f21(2)
//│ = NaN

:ssjs
:re
f(2)
//│ JS:
//│ f1(2)
//│ ═══[RUNTIME ERROR] Error: Function 'f' expected 2 arguments but got 1


:ssjs
:re
fun f(x)(y, z) = x + y + z
f(3)(4)
//│ JS:
//│ f4 = function f(...args) {
//│   globalThis.Predef.checkArgs("f", 1, true, args.length);
//│   let x = args[0];
//│   return (...args1) => {
//│     globalThis.Predef.checkArgs("", 2, true, args1.length);
//│     let y = args1[0];
//│     let z = args1[1];
//│     let tmp1;
//│     tmp1 = x + y;
//│     return tmp1 + z;
//│   };
//│ };
//│ tmp = f4(3);
//│ tmp(4) ?? null
//│ ═══[RUNTIME ERROR] Error: Function expected 2 arguments but got 1


:expect NaN
:ssjs
:noSanityCheck
let f = (x, y) => x + y in f(2)
//│ JS:
//│ f5 = (x, y) => { return x + y; }; f5(2) ?? null
//│ = NaN

:ssjs
:re
let f = (x, y) => x + y
f(2)
//│ JS:
//│ f6 = (...args) => {
//│   globalThis.Predef.checkArgs("", 2, true, args.length);
//│   let x = args[0];
//│   let y = args[1];
//│   return x + y;
//│ };
//│ f6(2) ?? null
//│ ═══[RUNTIME ERROR] Error: Function expected 2 arguments but got 1
//│ f = [Function: f6]


:expect NaN
:ssjs
:noSanityCheck
class Cls(x, y) with
  fun f(z, p) = x + y + z + p
Cls(1, 2).f(3)
//│ JS:
//│ Cls1 = function Cls(x1, y1) { return new Cls.class(x1, y1); };
//│ Cls1.class = class Cls {
//│   constructor(x, y) {
//│     this.x = x;
//│     this.y = y;
//│   }
//│   f(z, p) {
//│     let tmp2, tmp3;
//│     tmp2 = this.x + this.y;
//│     tmp3 = tmp2 + z;
//│     return tmp3 + p;
//│   }
//│   toString() { return "Cls(" + this.x + ", " + this.y + ")"; }
//│ };
//│ tmp1 = Cls1(1, 2);
//│ tmp1.f(3) ?? null
//│ = NaN

:ssjs
:re
class Cls(x, y) with
  fun f(z, p) = x + y + z + p
Cls(1, 2).f(3)
//│ JS:
//│ Cls3 = function Cls(...args1) { return new Cls.class(...args1); };
//│ Cls3.class = class Cls {
//│   constructor(x, y) {
//│     this.x = x;
//│     this.y = y;
//│   }
//│   f(...args) {
//│     globalThis.Predef.checkArgs("f", 2, true, args.length);
//│     let z = args[0];
//│     let p = args[1];
//│     let tmp3, tmp4;
//│     tmp3 = this.x + this.y;
//│     tmp4 = tmp3 + z;
//│     return tmp4 + p;
//│   }
//│   toString() { return "Cls(" + this.x + ", " + this.y + ")"; }
//│ };
//│ tmp2 = Cls3(1, 2);
//│ tmp2.f(3) ?? null
//│ ═══[RUNTIME ERROR] Error: Function 'f' expected 2 arguments but got 1


:ssjs
:re
class Cls(x, y) with
  fun f(z, p)(q, s) = x + y + z + p + q + s
Cls(1, 2).f(3, 4)(5)
//│ JS:
//│ Cls5 = function Cls(...args1) { return new Cls.class(...args1); };
//│ Cls5.class = class Cls {
//│   constructor(x, y) {
//│     this.x = x;
//│     this.y = y;
//│   }
//│   f(...args) {
//│     globalThis.Predef.checkArgs("f", 2, true, args.length);
//│     let z = args[0];
//│     let p = args[1];
//│     return (...args1) => {
//│       globalThis.Predef.checkArgs("", 2, true, args1.length);
//│       let q = args1[0];
//│       let s = args1[1];
//│       let tmp5, tmp6, tmp7, tmp8;
//│       tmp5 = this.x + this.y;
//│       tmp6 = tmp5 + z;
//│       tmp7 = tmp6 + p;
//│       tmp8 = tmp7 + q;
//│       return tmp8 + s;
//│     };
//│   }
//│   toString() { return "Cls(" + this.x + ", " + this.y + ")"; }
//│ };
//│ tmp3 = Cls5(1, 2);
//│ tmp4 = tmp3.f(3, 4);
//│ tmp4(5) ?? null
//│ ═══[RUNTIME ERROR] Error: Function expected 2 arguments but got 1


:ssjs
console.log(1)
//│ JS:
//│ selRes = this.console;
//│ if (selRes === undefined) {
//│   throw new this.Error("Access to required field 'console' yielded 'undefined'");
//│ } else {
//│   tmp5 = selRes;
//│ }
//│ tmp5.log(1) ?? null
//│ > 1


:re
:ssjs
globalThis.x
//│ JS:
//│ selRes1 = this.x;
//│ if (selRes1 === undefined) {
//│   throw new this.Error("Access to required field 'x' yielded 'undefined'");
//│ } else {
//│   selRes1
//│ }
//│ ═══[RUNTIME ERROR] Error: Access to required field 'x' yielded 'undefined'

:re
:ssjs
globalThis.x()
//│ JS:
//│ this.x() ?? null
//│ ═══[RUNTIME ERROR] TypeError: this.x is not a function




:re
:ssjs
module M with
  class A(x) with
    fun f(y) = x + y
if M.A(1).y is
  x and x == 1 then x
  else 0
//│ JS:
//│ const M$class = class M {
//│   constructor() {
//│     this.A = function A(...args1) { return new A.class(...args1); };
//│     this.A.class = class A {
//│       constructor(x1) {
//│         this.x = x1;
//│       }
//│       f(...args) {
//│         globalThis.Predef.checkArgs("f", 1, true, args.length);
//│         let y = args[0];
//│         return this.x + y;
//│       }
//│       toString() { return "A(" + this.x + ")"; }
//│     };
//│   }
//│   toString() { return "M"; }
//│ }; M1 = new M$class;
//│ M1.class = M$class;
//│ tmp6 = M1.A(1);
//│ selRes2 = tmp6.y;
//│ if (selRes2 === undefined) {
//│   throw new this.Error("Access to required field 'y' yielded 'undefined'");
//│ } else {
//│   tmp7 = selRes2;
//│ }
//│ scrut = tmp7;
//│ x = scrut;
//│ scrut1 = x == 1;
//│ if (scrut1 === true) {
//│   x
//│ } else {
//│   0
//│ }
//│ ═══[RUNTIME ERROR] Error: Access to required field 'y' yielded 'undefined'



:ssjs
:re
M.A(1).y
  console.log()
//│ JS:
//│ selRes3 = this.console;
//│ if (selRes3 === undefined) {
//│   throw new this.Error("Access to required field 'console' yielded 'undefined'");
//│ } else {
//│   tmp8 = selRes3;
//│ }
//│ tmp9 = M1.A(1);
//│ selRes4 = tmp9.y;
//│ if (selRes4 === undefined) {
//│   throw new this.Error("Access to required field 'y' yielded 'undefined'");
//│ } else {
//│   tmp10 = selRes4;
//│ }
//│ tmp8.log(tmp10) ?? null
//│ ═══[RUNTIME ERROR] Error: Access to required field 'y' yielded 'undefined'



:ssjs
:noSanityCheck
M.A(1).y
  console.log()
//│ JS:
//│ tmp11 = M1.A(1); this.console.log(tmp11.y) ?? null
//│ > undefined

:noSanityCheck
:expect false
M.A(2).y > 1
//│ = false

:re
M.A(2).y > 1
//│ ═══[RUNTIME ERROR] Error: Access to required field 'y' yielded 'undefined'

:re
:ssjs
M.A(1).g(0)
//│ JS:
//│ tmp15 = M1.A(1); tmp15.g(0) ?? null
//│ ═══[RUNTIME ERROR] TypeError: tmp15.g is not a function



:ssjs
M.A(1).f(0)
//│ JS:
//│ tmp16 = M1.A(1); tmp16.f(0) ?? null
//│ = 1



