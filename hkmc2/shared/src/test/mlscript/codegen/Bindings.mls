:js
// :sjs
// :elt
// :lot


let x = 1
x + 1
//│ = 2
//│ x = 1

x
//│ = 1

let x = 2
//│ x = 2

x
//│ = 2

let x = 1
let y = x
x + y
//│ = 2
//│ x = 1
//│ y = 1

let x =
  let y = 2 in y + 1
x * 2
//│ = 6
//│ x = 3

let x =
  let x = 2 in x + 1
x * 2
//│ = 6
//│ x = 3


let x = 1
//│ x = 1

fun incr(n) = n + 1
fun (|>) pipe(x, f) = f(x)

let x = x |> incr
//│ x = 2

let x |>= incr
//│ x = 3


:todo // proper error
let 2
//│ /!!!\ Uncaught error: scala.MatchError: LetLike(keyword 'let',IntLit(2),None,None) (of class hkmc2.syntax.Tree$LetLike)

:e
let x += 1 = 0
//│ ╔══[ERROR] Unsupported let binding shape
//│ ║  l.59: 	let x += 1 = 0
//│ ╙──      	    ^^^^^^^^^^

:e
let x += 1 = 0 in x
//│ ╔══[ERROR] Unsupported let binding shape
//│ ║  l.65: 	let x += 1 = 0 in x
//│ ╙──      	    ^^^^^^^^^^


:e
(let x = 1)
//│ ╔══[ERROR] Expected a body for let bindings in expression position
//│ ║  l.72: 	(let x = 1)
//│ ╙──      	     ^^^^^

:e
(let x = 1) + 1
//│ ╔══[ERROR] Expected a body for let bindings in expression position
//│ ║  l.78: 	(let x = 1) + 1
//│ ╙──      	     ^^^^^
//│ = "()1"

:e
(let f(x) = x) + 1
//│ ╔══[ERROR] Expected a body for let bindings in expression position
//│ ║  l.85: 	(let f(x) = x) + 1
//│ ╙──      	     ^^^^^^^^
//│ = "()1"

(let f(x) = x + 1 in f(42)) + 1
//│ = 44


let x = 1 in console.log(x); x
//│ > 1
//│ = 1


let x = 1 in
  console.log(x)
  console.log(x)
//│ > 1
//│ > 1


