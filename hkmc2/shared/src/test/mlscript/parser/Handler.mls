
:pe
handle
//│ ╔══[PARSE ERROR] Expected expression after 'handle' binding keyword; found end of input instead
//│ ║  l.3: 	handle
//│ ╙──     	      ^

:pe
handle h
//│ ╔══[PARSE ERROR] Expected '=' keyword after 'handle' binding head; found end of input instead
//│ ║  l.9: 	handle h
//│ ╙──     	        ^

:pe
handle h = Eff
//│ ╔══[PARSE ERROR] Expected 'with' keyword after 'handle' binding class name; found end of input instead
//│ ║  l.15: 	handle h = Eff
//│ ╙──      	              ^

:parseOnly
fun foo(x) = 1
handle h = Eff with
  fun f()(r) = r(0)
  fun g(a)(r) = r(1)
//│ Parsed:
//│ 	TermDef(Fun,App(Ident(foo),Tup(List(Ident(x)))),Some(IntLit(1)))
//│ 	Hndl(Ident(h),Ident(Eff),Block(List(TermDef(Fun,App(App(Ident(f),Tup(List())),Tup(List(Ident(r)))),Some(App(Ident(r),Tup(List(IntLit(0)))))), TermDef(Fun,App(App(Ident(g),Tup(List(Ident(a)))),Tup(List(Ident(r)))),Some(App(Ident(r),Tup(List(IntLit(1)))))))),None)


:e
handle 1 = 1 with
  fun f()(r) = r(0)
in
  foo(h)
//│ ╔══[ERROR] Unsupported handle binding shape
//│ ║  l.31: 	handle 1 = 1 with
//│ ║        	       ^^^^^^^^^^
//│ ║  l.32: 	  fun f()(r) = r(0)
//│ ╙──      	^^^^^^^^^^^^^^^^^^^
//│ ╔══[ERROR] Name not found: foo
//│ ║  l.34: 	  foo(h)
//│ ╙──      	  ^^^
//│ ╔══[ERROR] Name not found: h
//│ ║  l.34: 	  foo(h)
//│ ╙──      	      ^

abstract class Eff
fun foo(h) = 0

:el
handle h = Eff with
  fun f()(r) = r(0)
in
  foo(h)
//│ Elab: { { handle h = SynthSel(Ref(globalThis:block#5),Ident(Eff)) List(HandlerTermDefinition(r,TermDefinition(Some(class:Eff$h$156),Fun,member:f,List(ParamList(‹›,List(),None)),None,Some(App(Ref(r),Tup(List(Fld(‹›,Lit(IntLit(0)),None))))),‹result of member:f›,‹›,List()))); { globalThis:block#5#666(.)foo‹member:foo›(h#666) } } }

:e
(
  handle h = Eff with
    fun f()(r) = r(0)
    fun g(a)()(r) = r(1)
) + 1
//│ ╔══[ERROR] Expected a body for handle bindings in expression position
//│ ║  l.59: 	  handle h = Eff with
//│ ║        	         ^^^^^^^^^^^^
//│ ║  l.60: 	    fun f()(r) = r(0)
//│ ║        	^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.61: 	    fun g(a)()(r) = r(1)
//│ ╙──      	^^^^^^^^^^^^^^^^^^^^^^^^

:el
handle h = Eff with
  fun f()(r) = r(0)
  fun g(a)()()(r) = r(1)
foo(h)
//│ Elab: { handle h = SynthSel(Ref(globalThis:block#5),Ident(Eff)) List(HandlerTermDefinition(r,TermDefinition(Some(class:Eff$h$185),Fun,member:f,List(ParamList(‹›,List(),None)),None,Some(App(Ref(r),Tup(List(Fld(‹›,Lit(IntLit(0)),None))))),‹result of member:f›,‹›,List())), HandlerTermDefinition(r,TermDefinition(Some(class:Eff$h$185),Fun,member:g,List(ParamList(‹›,List(Param(‹›,a,None)),None), ParamList(‹›,List(),None), ParamList(‹›,List(),None)),None,Some(App(Ref(r),Tup(List(Fld(‹›,Lit(IntLit(1)),None))))),‹result of member:g›,‹›,List()))); { globalThis:block#5#666(.)foo‹member:foo›(h#666) } }

:e
handle h = Eff with
  fun f()(r) = r(0)
  fun g(a)(r) = r(1)
  val x = 24
  class Test with
    fun x() = x
foo(h)
//│ ╔══[ERROR] Only function definitions are allowed in handler blocks
//│ ║  l.82: 	  val x = 24
//│ ╙──      	          ^^
//│ ╔══[ERROR] Only function definitions are allowed in handler blocks
//│ ║  l.84: 	    fun x() = x
//│ ╙──      	              ^

:e
handle h = Eff with
  fun f()(r) = r(0)
  fun g(a)(r) = 
    handle e = Eff with
      fun f = r(0)
      fun g() = r(0)
      fun h()() = r(1)
      fun h2()(a, b) = r(1)
    foo(h)
foo(h)
//│ ╔══[ERROR] Handler function is missing resumption parameter
//│ ║  l.98: 	      fun f = r(0)
//│ ╙──      	              ^^^^
//│ ╔══[ERROR] Handler function is missing resumption parameter
//│ ║  l.99: 	      fun g() = r(0)
//│ ╙──      	                ^^^^
//│ ╔══[ERROR] Handler function is missing resumption parameter
//│ ║  l.100: 	      fun h()() = r(1)
//│ ╙──       	                  ^^^^
//│ ╔══[ERROR] Handler function is missing resumption parameter
//│ ║  l.101: 	      fun h2()(a, b) = r(1)
//│ ╙──       	                       ^^^^
//│ ╔══[ERROR] Name not found: h
//│ ║  l.102: 	    foo(h)
//│ ╙──       	        ^

:w
:el
handle h = Eff with
  fun f()(r) = r(0)
  fun g(a)(r) = r(1)
  12345
foo(h)
//│ ╔══[WARNING] Terms in handler block do nothing
//│ ║  l.125: 	  12345
//│ ╙──       	  ^^^^^
//│ Elab: { handle h = SynthSel(Ref(globalThis:block#5),Ident(Eff)) List(HandlerTermDefinition(r,TermDefinition(Some(class:Eff$h$262),Fun,member:f,List(ParamList(‹›,List(),None)),None,Some(App(Ref(r),Tup(List(Fld(‹›,Lit(IntLit(0)),None))))),‹result of member:f›,‹›,List())), HandlerTermDefinition(r,TermDefinition(Some(class:Eff$h$262),Fun,member:g,List(ParamList(‹›,List(Param(‹›,a,None)),None)),None,Some(App(Ref(r),Tup(List(Fld(‹›,Lit(IntLit(1)),None))))),‹result of member:g›,‹›,List()))); { globalThis:block#5#666(.)foo‹member:foo›(h#666) } }
