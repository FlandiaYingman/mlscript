:js
:handler

// TODO we should probably forbid handlers in constructors


abstract class Effect with
  fun perform(arg: Str): Str


object Lol with
  handle h = Effect with
    fun perform(arg)(k) =
      print(arg)
      "b"
  print(h.perform("k"))
//│ > k

// TODO: `handle` statements should be rejected when followed by further object initialization code
//       like `val` bindings or `let` bindings that are captured by class members
:todo
:e
// x may be uninitialized
class Lol() with
  handle h = Effect with
    fun perform(arg)(k) =
      print(arg)
      "b"
  print(h.perform("k"))
  val x = 123

// FIXME: should NOT return a partially initialized object
let oops = Lol()
//│ > k
//│ oops = Lol {}

:re
oops.x
//│ ═══[RUNTIME ERROR] Error: Access to required field 'x' yielded 'undefined'


